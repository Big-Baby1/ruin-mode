{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2dee563e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  id: \"notice__screen\"\n};\nconst _hoisted_2 = {\n  class: \"notice__body\"\n};\nconst _hoisted_3 = {\n  class: \"notice__left\"\n};\nconst _hoisted_4 = [\"textContent\"];\nconst _hoisted_5 = {\n  class: \"notice__body\"\n};\nconst _hoisted_6 = {\n  class: \"notice__left\"\n};\nconst _hoisted_7 = [\"textContent\"];\nconst _hoisted_8 = {\n  class: \"notice__body\"\n};\nconst _hoisted_9 = {\n  class: \"notice__left\"\n};\nconst _hoisted_10 = [\"textContent\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"i\", {\n    class: _normalizeClass($options.getPic($data.list[2].pic)),\n    \"aria-hidden\": \"true\"\n  }, null, 2)]), _createElementVNode(\"div\", {\n    class: \"notice__text\",\n    textContent: _toDisplayString($data.list[2].text)\n  }, null, 8, _hoisted_4)], 512), [[_vShow, $data.list[2].show]]), _withDirectives(_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"i\", {\n    class: _normalizeClass($options.getPic($data.list[1].pic)),\n    \"aria-hidden\": \"true\"\n  }, null, 2)]), _createElementVNode(\"div\", {\n    class: \"notice__text\",\n    textContent: _toDisplayString($data.list[1].text)\n  }, null, 8, _hoisted_7)], 512), [[_vShow, $data.list[1].show]]), _withDirectives(_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"i\", {\n    class: _normalizeClass($options.getPic($data.list[0].pic)),\n    \"aria-hidden\": \"true\"\n  }, null, 2)]), _createElementVNode(\"div\", {\n    class: \"notice__text\",\n    textContent: _toDisplayString($data.list[0].text)\n  }, null, 8, _hoisted_10)], 512), [[_vShow, $data.list[0].show]])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,EAAE,EAAC;;;EACuBC,KAAK,EAAC;;;EACxBA,KAAK,EAAC;;;;EAOYA,KAAK,EAAC;;;EACxBA,KAAK,EAAC;;;;EAOYA,KAAK,EAAC;;;EACxBA,KAAK,EAAC;;;;uBAlBnBC,oBAwBM,KAxBN,cAwBM,iBAvBFC,oBAMM,KANN,cAMM,CALFA,oBAEM,KAFN,cAEM,CADFA,oBAAuD,GAAvD,EAAuD;IAAnDF,KAAK,kBAAEG,gBAAOC,WAAI,CAAJ,EAAQC,GAAf,CAAF,CAA8C;IAAvB,eAAY;EAAW,CAAvD,UACE,CAFN,CAKE,EAFFH,oBACM,KADN,EACM;IADDF,KAAK,EAAC,cACL;iBADoBM,iBAAQF,KAAa,KAAb,CAAI,CAAJ,EAAQG,IAAhB;EACpB,CADN,sBAEE,CANN,kBAAaH,WAAI,CAAJ,EAAQI,OAuBnB,kBAfFN,oBAMM,KANN,cAMM,CALFA,oBAEM,KAFN,cAEM,CADFA,oBAAuD,GAAvD,EAAuD;IAAnDF,KAAK,kBAAEG,gBAAOC,WAAI,CAAJ,EAAQC,GAAf,CAAF,CAA8C;IAAvB,eAAY;EAAW,CAAvD,UACE,CAFN,CAKE,EAFFH,oBACM,KADN,EACM;IADDF,KAAK,EAAC,cACL;iBADoBM,iBAAQF,KAAa,KAAb,CAAI,CAAJ,EAAQG,IAAhB;EACpB,CADN,sBAEE,CANN,kBAAaH,WAAI,CAAJ,EAAQI,OAenB,kBAPFN,oBAMM,KANN,cAMM,CALFA,oBAEM,KAFN,cAEM,CADFA,oBAAuD,GAAvD,EAAuD;IAAnDF,KAAK,kBAAEG,gBAAOC,WAAI,CAAJ,EAAQC,GAAf,CAAF,CAA8C;IAAvB,eAAY;EAAW,CAAvD,UACE,CAFN,CAKE,EAFFH,oBACM,KADN,EACM;IADDF,KAAK,EAAC,cACL;iBADoBM,iBAAQF,KAAa,KAAb,CAAI,CAAJ,EAAQG,IAAhB;EACpB,CADN,uBAEE,CANN,kBAAaH,WAAI,CAAJ,EAAQI,OAOnB,CAxBN","names":["id","class","_createElementBlock","_createElementVNode","$options","$data","pic","_toDisplayString","text","show"],"sourceRoot":"","sources":["C:\\Users\\n1cro\\Desktop\\ruin-mode\\sources-code\\vuejs-main\\src\\views\\notification.vue"],"sourcesContent":["<template>\r\n    <div id=\"notice__screen\">\r\n        <div v-show=\"list[2].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[2].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[2].text\">\r\n            </div>\r\n        </div>\r\n\r\n        <div v-show=\"list[1].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[1].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[1].text\">\r\n            </div>\r\n        </div>\r\n\r\n        <div v-show=\"list[0].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[0].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[0].text\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst noti = \"notification\";\r\nexport default {\r\n    name: noti,\r\n    data() {\r\n        return {\r\n            list: [\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                },\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                },\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                }\r\n            ],\r\n            queue: []\r\n        }\r\n    },\r\n    methods: {\r\n        addNotify(type, text) {\r\n            let added = false;\r\n\r\n            this.list.forEach(el => {\r\n                if (!el.show && !added) {\r\n                    added = true;\r\n                    let i = this.list.indexOf(el);\r\n\r\n                    this.list[i] = {\r\n                        show: true,\r\n                        pic: type,\r\n                        text: text\r\n                    }\r\n                    console.log(this.list)\r\n                    setTimeout(this.removeNotify, 5000);\r\n                }\r\n            });\r\n\r\n            if (!added) {\r\n                this.queue.push({type: type, text: text});\r\n            }\r\n        },\r\n\r\n        removeNotify() {\r\n            try {\r\n                if (this.queue[0]) {\r\n                    let el = this.queue.shift();\r\n                    this.list.push({\r\n                        show: true,\r\n                        pic: el.type,\r\n                        text: el.text\r\n                    });\r\n                    this.list.shift();\r\n                    setTimeout(this.removeNotify, 5000);\r\n                } else {\r\n                    this.list.push({\r\n                        show: false,\r\n                        pic: '',\r\n                        text: ''\r\n                    });\r\n                    this.list.shift();\r\n                    console.log(this.list)\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        },\r\n\r\n        getPic(type) {\r\n            switch (type) {\r\n                case \"s\": {\r\n                    return \"fa fa-bell\";\r\n                }\r\n                case \"w\": {\r\n                    return \"fa fa-exclamation-triangle\";\r\n                }\r\n                case \"e\": {\r\n                    return \"fa fa-times\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    computed: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#notice__screen {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n\r\n    width: 28%;\r\n    min-height: 3vw;\r\n    max-height: 20vw;\r\n    margin-right: -50%;\r\n    font-size: .9vw;\r\n    color: white;\r\n    transform: translate(-50%);\r\n}\r\n\r\n.notice__body {\r\n    position: relative;\r\n    width: 100%;\r\n    padding: 3% 0;\r\n\r\n    margin-bottom: 1.5%;\r\n    border-radius: .3em;\r\n    background-color: #191919;\r\n}\r\n\r\n.notice__left {\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 11%;\r\n    position: absolute;\r\n    background-color: #191919;\r\n    border-radius: .3em 0 0 .3em;\r\n}\r\n\r\n.notice__left i {\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n\r\n}\r\n\r\n.notice__text {\r\n\r\n    text-align: center;\r\n    width: 80%;\r\n    padding: 0 0 0 13%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}