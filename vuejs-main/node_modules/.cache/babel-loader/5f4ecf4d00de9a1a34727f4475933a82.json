{"ast":null,"code":"const noti = \"notification\";\nexport default {\n  name: noti,\n\n  data() {\n    return {\n      list: [{\n        show: false,\n        pic: '',\n        text: ''\n      }, {\n        show: false,\n        pic: '',\n        text: ''\n      }, {\n        show: false,\n        pic: '',\n        text: ''\n      }],\n      queue: []\n    };\n  },\n\n  methods: {\n    addNotify(type, text) {\n      let added = false;\n      this.list.forEach(el => {\n        if (!el.show && !added) {\n          added = true;\n          let i = this.list.indexOf(el);\n          this.list[i] = {\n            show: true,\n            pic: type,\n            text: text\n          };\n          console.log(this.list);\n          setTimeout(this.removeNotify, 5000);\n        }\n      });\n\n      if (!added) {\n        this.queue.push({\n          type: type,\n          text: text\n        });\n      }\n    },\n\n    removeNotify() {\n      try {\n        if (this.queue[0]) {\n          let el = this.queue.shift();\n          this.list.push({\n            show: true,\n            pic: el.type,\n            text: el.text\n          });\n          this.list.shift();\n          setTimeout(this.removeNotify, 5000);\n        } else {\n          this.list.push({\n            show: false,\n            pic: '',\n            text: ''\n          });\n          this.list.shift();\n          console.log(this.list);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n\n    getPic(type) {\n      switch (type) {\n        case \"s\":\n          {\n            return \"fa fa-bell\";\n          }\n\n        case \"w\":\n          {\n            return \"fa fa-exclamation-triangle\";\n          }\n\n        case \"e\":\n          {\n            return \"fa fa-times\";\n          }\n      }\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":"AA6BA,MAAMA,IAAG,GAAI,cAAb;AACA,eAAe;EACXC,IAAI,EAAED,IADK;;EAEXE,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,CACF;QACIC,IAAI,EAAE,KADV;QAEIC,GAAG,EAAE,EAFT;QAGIC,IAAI,EAAE;MAHV,CADE,EAMF;QACIF,IAAI,EAAE,KADV;QAEIC,GAAG,EAAE,EAFT;QAGIC,IAAI,EAAE;MAHV,CANE,EAWF;QACIF,IAAI,EAAE,KADV;QAEIC,GAAG,EAAE,EAFT;QAGIC,IAAI,EAAE;MAHV,CAXE,CADH;MAkBHC,KAAK,EAAE;IAlBJ,CAAP;EAoBH,CAvBU;;EAwBXC,OAAO,EAAE;IACLC,SAAS,CAACC,IAAD,EAAOJ,IAAP,EAAa;MAClB,IAAIK,KAAI,GAAI,KAAZ;MAEA,KAAKR,IAAL,CAAUS,OAAV,CAAkBC,EAAC,IAAK;QACpB,IAAI,CAACA,EAAE,CAACT,IAAJ,IAAY,CAACO,KAAjB,EAAwB;UACpBA,KAAI,GAAI,IAAR;UACA,IAAIG,IAAI,KAAKX,IAAL,CAAUY,OAAV,CAAkBF,EAAlB,CAAR;UAEA,KAAKV,IAAL,CAAUW,CAAV,IAAe;YACXV,IAAI,EAAE,IADK;YAEXC,GAAG,EAAEK,IAFM;YAGXJ,IAAI,EAAEA;UAHK,CAAf;UAKAU,OAAO,CAACC,GAAR,CAAY,KAAKd,IAAjB;UACAe,UAAU,CAAC,KAAKC,YAAN,EAAoB,IAApB,CAAV;QACJ;MACH,CAbD;;MAeA,IAAI,CAACR,KAAL,EAAY;QACR,KAAKJ,KAAL,CAAWa,IAAX,CAAgB;UAACV,IAAI,EAAEA,IAAP;UAAaJ,IAAI,EAAEA;QAAnB,CAAhB;MACJ;IACH,CAtBI;;IAwBLa,YAAY,GAAG;MACX,IAAI;QACA,IAAI,KAAKZ,KAAL,CAAW,CAAX,CAAJ,EAAmB;UACf,IAAIM,EAAC,GAAI,KAAKN,KAAL,CAAWc,KAAX,EAAT;UACA,KAAKlB,IAAL,CAAUiB,IAAV,CAAe;YACXhB,IAAI,EAAE,IADK;YAEXC,GAAG,EAAEQ,EAAE,CAACH,IAFG;YAGXJ,IAAI,EAAEO,EAAE,CAACP;UAHE,CAAf;UAKA,KAAKH,IAAL,CAAUkB,KAAV;UACAH,UAAU,CAAC,KAAKC,YAAN,EAAoB,IAApB,CAAV;QACJ,CATA,MASO;UACH,KAAKhB,IAAL,CAAUiB,IAAV,CAAe;YACXhB,IAAI,EAAE,KADK;YAEXC,GAAG,EAAE,EAFM;YAGXC,IAAI,EAAE;UAHK,CAAf;UAKA,KAAKH,IAAL,CAAUkB,KAAV;UACAL,OAAO,CAACC,GAAR,CAAY,KAAKd,IAAjB;QACJ;MACJ,CAnBA,CAmBE,OAAOmB,CAAP,EAAU;QACRN,OAAO,CAACC,GAAR,CAAYK,CAAZ;MACJ;IACH,CA/CI;;IAiDLC,MAAM,CAACb,IAAD,EAAO;MACT,QAAQA,IAAR;QACI,KAAK,GAAL;UAAU;YACN,OAAO,YAAP;UACJ;;QACA,KAAK,GAAL;UAAU;YACN,OAAO,4BAAP;UACJ;;QACA,KAAK,GAAL;UAAU;YACN,OAAO,aAAP;UACJ;MATJ;IAWJ;;EA7DK,CAxBE;EAwFXc,QAAQ,EAAE;AAxFC,CAAf","names":["noti","name","data","list","show","pic","text","queue","methods","addNotify","type","added","forEach","el","i","indexOf","console","log","setTimeout","removeNotify","push","shift","e","getPic","computed"],"sourceRoot":"","sources":["C:\\Users\\n1cro\\Desktop\\server-files\\n1cro-main\\src\\views\\notification.vue"],"sourcesContent":["<template>\r\n    <div id=\"notice__screen\">\r\n        <div v-show=\"list[2].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[2].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[2].text\">\r\n            </div>\r\n        </div>\r\n\r\n        <div v-show=\"list[1].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[1].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[1].text\">\r\n            </div>\r\n        </div>\r\n\r\n        <div v-show=\"list[0].show\" class=\"notice__body\">\r\n            <div class=\"notice__left\">\r\n                <i :class=\"getPic(list[0].pic)\" aria-hidden=\"true\"></i>\r\n            </div>\r\n            <div class=\"notice__text\" v-text=\"list[0].text\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst noti = \"notification\";\r\nexport default {\r\n    name: noti,\r\n    data() {\r\n        return {\r\n            list: [\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                },\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                },\r\n                {\r\n                    show: false,\r\n                    pic: '',\r\n                    text: ''\r\n                }\r\n            ],\r\n            queue: []\r\n        }\r\n    },\r\n    methods: {\r\n        addNotify(type, text) {\r\n            let added = false;\r\n\r\n            this.list.forEach(el => {\r\n                if (!el.show && !added) {\r\n                    added = true;\r\n                    let i = this.list.indexOf(el);\r\n\r\n                    this.list[i] = {\r\n                        show: true,\r\n                        pic: type,\r\n                        text: text\r\n                    }\r\n                    console.log(this.list)\r\n                    setTimeout(this.removeNotify, 5000);\r\n                }\r\n            });\r\n\r\n            if (!added) {\r\n                this.queue.push({type: type, text: text});\r\n            }\r\n        },\r\n\r\n        removeNotify() {\r\n            try {\r\n                if (this.queue[0]) {\r\n                    let el = this.queue.shift();\r\n                    this.list.push({\r\n                        show: true,\r\n                        pic: el.type,\r\n                        text: el.text\r\n                    });\r\n                    this.list.shift();\r\n                    setTimeout(this.removeNotify, 5000);\r\n                } else {\r\n                    this.list.push({\r\n                        show: false,\r\n                        pic: '',\r\n                        text: ''\r\n                    });\r\n                    this.list.shift();\r\n                    console.log(this.list)\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        },\r\n\r\n        getPic(type) {\r\n            switch (type) {\r\n                case \"s\": {\r\n                    return \"fa fa-bell\";\r\n                }\r\n                case \"w\": {\r\n                    return \"fa fa-exclamation-triangle\";\r\n                }\r\n                case \"e\": {\r\n                    return \"fa fa-times\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    computed: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#notice__screen {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n\r\n    width: 28%;\r\n    min-height: 3vw;\r\n    max-height: 20vw;\r\n    margin-right: -50%;\r\n    font-size: .9vw;\r\n    color: white;\r\n    transform: translate(-50%);\r\n}\r\n\r\n.notice__body {\r\n    position: relative;\r\n    width: 100%;\r\n    padding: 3% 0;\r\n\r\n    margin-bottom: 1.5%;\r\n    border-radius: .3em;\r\n    background-color: #191919;\r\n}\r\n\r\n.notice__left {\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 11%;\r\n    position: absolute;\r\n    background-color: #191919;\r\n    border-radius: .3em 0 0 .3em;\r\n}\r\n\r\n.notice__left i {\r\n\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-right: -50%;\r\n    transform: translate(-50%, -50%)\r\n\r\n}\r\n\r\n.notice__text {\r\n\r\n    text-align: center;\r\n    width: 80%;\r\n    padding: 0 0 0 13%;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}